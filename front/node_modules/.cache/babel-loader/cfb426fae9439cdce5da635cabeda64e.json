{"ast":null,"code":"function Validate(input) {\n  const email = /^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/;\n  const password = /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,10}$/;\n  const errors = {};\n  if (!input.username) {\n    errors.emptyEmail = 'Por favor llena este campo';\n  }\n  if (!email.test(input.username)) {\n    errors.email = 'El nombre se usuario debe ser un email';\n  }\n  if (input.username.length > 35) {\n    errors.userLength = 'Usuario inválido';\n  }\n  //Password validation\n  if (!input.password) {\n    errors.emptyPass = 'Por favor llena este campo';\n  }\n  /*if (input.password.length<6 || input.password.length>10){\n  \terrors.passLength='Contraseña inválida'\n  \t}*/\n  if (!password.test(input.password)) {\n    errors.password = 'contraseña inválida';\n  }\n  return errors;\n}\n_c = Validate;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["Validate","input","email","password","errors","username","emptyEmail","test","length","userLength","emptyPass","Validation"],"sources":["/data/data/com.termux/files/home/Henry-M2/FT-M2/06-React-Intro/homework/02 - Integration/src/components/validation.js"],"sourcesContent":["function Validate(input){\n\tconst email=/^(([^<>()[\\].,;:\\s@”]+(\\.[^<>()[\\].,;:\\s@”]+)*)|(”.+”))@(([^<>()[\\].,;:\\s@”]+\\.)+[^<>()[\\].,;:\\s@”]{2,})$/\n\tconst password=/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,10}$/\n\tconst errors={};\n\tif (!input.username){\n\t\terrors.emptyEmail='Por favor llena este campo'\n\t\t}\n\tif (!email.test(input.username)){\n                errors.email='El nombre se usuario debe ser un email'\n                }\n\tif (input.username.length>35){\n\t\terrors.userLength='Usuario inválido'\n\t\t}\n\t//Password validation\n\tif (!input.password){\n\t\terrors.emptyPass='Por favor llena este campo'\n\t\t}\n\t/*if (input.password.length<6 || input.password.length>10){\n\t\terrors.passLength='Contraseña inválida'\n\t\t}*/\n\tif(!password.test(input.password)){\n\t\terrors.password='contraseña inválida'\n\t\t}\n\treturn errors;\n\t}\nexport default Validation;\n"],"mappings":"AAAA,SAASA,QAAQ,CAACC,KAAK,EAAC;EACvB,MAAMC,KAAK,GAAC,2GAA2G;EACvH,MAAMC,QAAQ,GAAC,6CAA6C;EAC5D,MAAMC,MAAM,GAAC,CAAC,CAAC;EACf,IAAI,CAACH,KAAK,CAACI,QAAQ,EAAC;IACnBD,MAAM,CAACE,UAAU,GAAC,4BAA4B;EAC9C;EACD,IAAI,CAACJ,KAAK,CAACK,IAAI,CAACN,KAAK,CAACI,QAAQ,CAAC,EAAC;IACjBD,MAAM,CAACF,KAAK,GAAC,wCAAwC;EACrD;EACf,IAAID,KAAK,CAACI,QAAQ,CAACG,MAAM,GAAC,EAAE,EAAC;IAC5BJ,MAAM,CAACK,UAAU,GAAC,kBAAkB;EACpC;EACD;EACA,IAAI,CAACR,KAAK,CAACE,QAAQ,EAAC;IACnBC,MAAM,CAACM,SAAS,GAAC,4BAA4B;EAC7C;EACD;AACD;AACA;EACC,IAAG,CAACP,QAAQ,CAACI,IAAI,CAACN,KAAK,CAACE,QAAQ,CAAC,EAAC;IACjCC,MAAM,CAACD,QAAQ,GAAC,qBAAqB;EACrC;EACD,OAAOC,MAAM;AACb;AAAC,KAxBOJ,QAAQ;AAyBjB,eAAeW,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}